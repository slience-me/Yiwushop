<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.slienceme.project_shop.mapper.AdminMapper">
    <resultMap id="BaseResultMap" type="xyz.slienceme.project_shop.dto.Admin">
        <id column="admin_id" jdbcType="INTEGER" property="adminId"/>
        <result column="admin_name" jdbcType="VARCHAR" property="adminName"/>
        <result column="admin_number" jdbcType="VARCHAR" property="adminNumber"/>
        <result column="admin_pwd" jdbcType="VARCHAR" property="adminPwd"/>
        <result column="error_times" jdbcType="INTEGER" property="errorTimes"/>
        <result column="role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="is_delete" jdbcType="INTEGER" property="isDelete"/>
        <result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="CREATED_BY" jdbcType="INTEGER" property="createdBy"/>
        <result column="admin_status" jdbcType="INTEGER" property="adminStatus"/>
    </resultMap>
    <sql id="Base_Column_List">
        admin_id
        , admin_name, admin_number, admin_pwd, error_times, role_id, is_delete, CREATED_TIME,
    CREATED_BY, admin_status
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from admin
        where admin_id = #{adminId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from admin
        where admin_id = #{adminId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="xyz.slienceme.project_shop.dto.Admin">
        insert into admin (admin_id, admin_name, admin_number,
                           admin_pwd, error_times, role_id,
                           is_delete, CREATED_TIME, CREATED_BY,
                           admin_status)
        values (#{adminId,jdbcType=INTEGER}, #{adminName,jdbcType=VARCHAR}, #{adminNumber,jdbcType=VARCHAR},
                #{adminPwd,jdbcType=VARCHAR}, #{errorTimes,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER},
                #{isDelete,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=INTEGER},
                #{adminStatus,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="xyz.slienceme.project_shop.dto.Admin">
        insert into admin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="adminId != null">
                admin_id,
            </if>
            <if test="adminName != null">
                admin_name,
            </if>
            <if test="adminNumber != null">
                admin_number,
            </if>
            <if test="adminPwd != null">
                admin_pwd,
            </if>
            <if test="errorTimes != null">
                error_times,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="createdTime != null">
                CREATED_TIME,
            </if>
            <if test="createdBy != null">
                CREATED_BY,
            </if>
            <if test="adminStatus != null">
                admin_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="adminId != null">
                #{adminId,jdbcType=INTEGER},
            </if>
            <if test="adminName != null">
                #{adminName,jdbcType=VARCHAR},
            </if>
            <if test="adminNumber != null">
                #{adminNumber,jdbcType=VARCHAR},
            </if>
            <if test="adminPwd != null">
                #{adminPwd,jdbcType=VARCHAR},
            </if>
            <if test="errorTimes != null">
                #{errorTimes,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="createdTime != null">
                #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=INTEGER},
            </if>
            <if test="adminStatus != null">
                #{adminStatus,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="xyz.slienceme.project_shop.dto.Admin">
        update admin
        <set>
            <if test="adminName != null">
                admin_name = #{adminName,jdbcType=VARCHAR},
            </if>
            <if test="adminNumber != null">
                admin_number = #{adminNumber,jdbcType=VARCHAR},
            </if>
            <if test="adminPwd != null">
                admin_pwd = #{adminPwd,jdbcType=VARCHAR},
            </if>
            <if test="errorTimes != null">
                error_times = #{errorTimes,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="createdTime != null">
                CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                CREATED_BY = #{createdBy,jdbcType=INTEGER},
            </if>
            <if test="adminStatus != null">
                admin_status = #{adminStatus,jdbcType=INTEGER},
            </if>
        </set>
        where admin_id = #{adminId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="xyz.slienceme.project_shop.dto.Admin">
        update admin
        set admin_name   = #{adminName,jdbcType=VARCHAR},
            admin_number = #{adminNumber,jdbcType=VARCHAR},
            admin_pwd    = #{adminPwd,jdbcType=VARCHAR},
            error_times  = #{errorTimes,jdbcType=INTEGER},
            role_id      = #{roleId,jdbcType=INTEGER},
            is_delete    = #{isDelete,jdbcType=INTEGER},
            CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
            CREATED_BY   = #{createdBy,jdbcType=INTEGER},
            admin_status = #{adminStatus,jdbcType=INTEGER}
        where admin_id = #{adminId,jdbcType=INTEGER}
    </update>
    <!-- 根据用户名密码查询admin-->
    <!-- 返回值类型:  Admin selectByNameAndPwd -->
    <!-- 参数: -->
    <!--  @param username 用户名   -->
    <!--  @param password      密码   -->
    <select id="selectByNameAndPwd" resultType="java.util.HashMap">
        SELECT a.admin_id     as adminId,
               a.admin_name   as adminName,
               a.admin_number as adminNumber,
               a.admin_status as adminStatus,
               a.role_id      as roleId,
               a.CREATED_TIME as createdTime,
               r.role_name    as roleName
        FROM admin a
                 left join role r on a.role_id = r.role_id
        where a.is_delete = 0
          and a.admin_number = #{username}
          and a.admin_pwd = #{password};
    </select>

    <!-- 查询是否绑定管理员-->
    <!-- 返回值类型: List<Admin> selectByRoleId -->
    <!-- 参数: -->
    <!--   @param roleId 角色id  -->
    <select id="selectByRoleId" resultType="xyz.slienceme.project_shop.dto.Admin">
        SELECT a.*
        FROM admin a
        where a.is_delete = 0
          and a.role_id = #{roleId}
    </select>

    <!-- 查询管理员列表-->
    <!-- 返回值类型:  List<HashMap<String, Object>> selectList -->
    <!-- 参数: -->
    <!--  @param keyword 关键词   -->
    <select id="selectList" resultType="java.util.HashMap">
        SELECT a.admin_id as adminId,
        a.admin_name as adminName,
        a.admin_number as adminNumber,
        a.role_id as roleId,
        a.admin_status as adminStatus,
        DATE_FORMAT(a.CREATED_TIME, '%Y-%m-%d %H:%i:%s') createdTime,
        r.role_name as roleName
        FROM admin a left join role r on a.role_id=r.role_id
        where
        a.is_delete=0
        <if test="keyword!=null and keyword!=''">
            and CONCAT(a.admin_name,a.admin_number) like concat('%',#{keyword},'%')
        </if>
        order by a.CREATED_TIME desc
    </select>

    <!-- 根据管理员名称查询管理员-->
    <!-- 返回值类型:  Admin selectByName -->
    <!-- 参数: -->
    <!--  @param adminNumber 用户名   -->
    <select id="selectByName" resultType="xyz.slienceme.project_shop.dto.Admin">
        SELECT a.admin_id     as                                adminId,
               a.admin_name   as                                adminName,
               a.admin_number as                                adminNumber,
               a.role_id      as                                roleId,
               a.error_times  as                                errorTimes,
               a.admin_status as                                adminStatus,
               r.role_name    as                                roleName,
               DATE_FORMAT(a.CREATED_TIME, '%Y-%m-%d %H:%i:%s') createdTime
        FROM admin a
                 left join role r on a.role_id = r.role_id
        where a.is_delete = 0
          and a.admin_number = #{username}
        order by a.CREATED_TIME desc
    </select>
</mapper>