<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.slienceme.project_shop.mapper.PawnMapper">
    <resultMap id="BaseResultMap" type="xyz.slienceme.project_shop.dto.Pawn">
        <id column="auctions_id" jdbcType="INTEGER" property="auctionsId"/>
        <result column="goods_id" jdbcType="INTEGER" property="goodsId"/>
        <result column="pawn_name" jdbcType="VARCHAR" property="pawnName"/>
        <result column="start" jdbcType="TIMESTAMP" property="start"/>
        <result column="end" jdbcType="TIMESTAMP" property="end"/>
        <result column="present_price" jdbcType="DECIMAL" property="presentPrice"/>
        <result column="present_person" jdbcType="INTEGER" property="presentPerson"/>
        <result column="fixed_price" jdbcType="DECIMAL" property="fixedPrice"/>
        <result column="starting_price" jdbcType="DECIMAL" property="startingPrice"/>
        <result column="is_delete" jdbcType="INTEGER" property="isDelete"/>
        <result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="CREATED_BY" jdbcType="INTEGER" property="createdBy"/>
    </resultMap>
    <sql id="Base_Column_List">
        auctions_id
        , goods_id, pawn_name, start,
        end, present_price, present_person, fixed_price,
    starting_price, is_delete, CREATED_TIME, CREATED_BY
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from pawn
        where auctions_id = #{auctionsId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from pawn
        where auctions_id = #{auctionsId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="xyz.slienceme.project_shop.dto.Pawn">
        insert into pawn (auctions_id, goods_id, pawn_name,
                          start, end, present_price,
                          present_person, fixed_price, starting_price,
                          is_delete, CREATED_TIME, CREATED_BY)
        values (#{auctionsId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{pawnName,jdbcType=VARCHAR},
                #{start,jdbcType=TIMESTAMP}, #{end,jdbcType=TIMESTAMP}, #{presentPrice,jdbcType=DECIMAL},
                #{presentPerson,jdbcType=INTEGER}, #{fixedPrice,jdbcType=DECIMAL}, #{startingPrice,jdbcType=DECIMAL},
                #{isDelete,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="xyz.slienceme.project_shop.dto.Pawn">
        insert into pawn
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="auctionsId != null">
                auctions_id,
            </if>
            <if test="goodsId != null">
                goods_id,
            </if>
            <if test="pawnName != null">
                pawn_name,
            </if>
            <if test="start != null">
                start,
            </if>
            <if test="end != null">
                end,
            </if>
            <if test="presentPrice != null">
                present_price,
            </if>
            <if test="presentPerson != null">
                present_person,
            </if>
            <if test="fixedPrice != null">
                fixed_price,
            </if>
            <if test="startingPrice != null">
                starting_price,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="createdTime != null">
                CREATED_TIME,
            </if>
            <if test="createdBy != null">
                CREATED_BY,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="auctionsId != null">
                #{auctionsId,jdbcType=INTEGER},
            </if>
            <if test="goodsId != null">
                #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="pawnName != null">
                #{pawnName,jdbcType=VARCHAR},
            </if>
            <if test="start != null">
                #{start,jdbcType=TIMESTAMP},
            </if>
            <if test="end != null">
                #{end,jdbcType=TIMESTAMP},
            </if>
            <if test="presentPrice != null">
                #{presentPrice,jdbcType=DECIMAL},
            </if>
            <if test="presentPerson != null">
                #{presentPerson,jdbcType=INTEGER},
            </if>
            <if test="fixedPrice != null">
                #{fixedPrice,jdbcType=DECIMAL},
            </if>
            <if test="startingPrice != null">
                #{startingPrice,jdbcType=DECIMAL},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="createdTime != null">
                #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="xyz.slienceme.project_shop.dto.Pawn">
        update pawn
        <set>
            <if test="goodsId != null">
                goods_id = #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="pawnName != null">
                pawn_name = #{pawnName,jdbcType=VARCHAR},
            </if>
            <if test="start != null">
                start = #{start,jdbcType=TIMESTAMP},
            </if>
            <if test="end != null">
                end = #{end,jdbcType=TIMESTAMP},
            </if>
            <if test="presentPrice != null">
                present_price = #{presentPrice,jdbcType=DECIMAL},
            </if>
            <if test="presentPerson != null">
                present_person = #{presentPerson,jdbcType=INTEGER},
            </if>
            <if test="fixedPrice != null">
                fixed_price = #{fixedPrice,jdbcType=DECIMAL},
            </if>
            <if test="startingPrice != null">
                starting_price = #{startingPrice,jdbcType=DECIMAL},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="createdTime != null">
                CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                CREATED_BY = #{createdBy,jdbcType=INTEGER},
            </if>
        </set>
        where auctions_id = #{auctionsId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="xyz.slienceme.project_shop.dto.Pawn">
        update pawn
        set goods_id       = #{goodsId,jdbcType=INTEGER},
            pawn_name      = #{pawnName,jdbcType=VARCHAR},
            start          = #{start,jdbcType=TIMESTAMP},
            end            = #{end,jdbcType=TIMESTAMP},
            present_price  = #{presentPrice,jdbcType=DECIMAL},
            present_person = #{presentPerson,jdbcType=INTEGER},
            fixed_price    = #{fixedPrice,jdbcType=DECIMAL},
            starting_price = #{startingPrice,jdbcType=DECIMAL},
            is_delete      = #{isDelete,jdbcType=INTEGER},
            CREATED_TIME   = #{createdTime,jdbcType=TIMESTAMP},
            CREATED_BY     = #{createdBy,jdbcType=INTEGER}
        where auctions_id = #{auctionsId,jdbcType=INTEGER}
    </update>

    <!-- 查询竞拍场次列表-->
    <!-- 返回值类型:  List<HashMap<String, Object>> selectList -->
    <!-- 参数: -->
    <!--  @param keyword 关键词   -->
    <select id="selectList" resultType="java.util.HashMap">
        SELECT a.auctions_id as auctionsId,
        a.goods_id as goodsId,
        g.goods_name as goodName,
        a.pawn_name as pawnName,
        a.present_person as presentPerson,
        u.user_name as userName,
        a.present_price as presentPrice,
        a.starting_price as startingPrice,
        a.fixed_price as fixedPrice,
        DATE_FORMAT(a.start, '%Y-%m-%d %H:%i:%s') startTime,
        DATE_FORMAT(a.end, '%Y-%m-%d %H:%i:%s') endTime,
        DATE_FORMAT(a.CREATED_TIME, '%Y-%m-%d %H:%i:%s') createdTime
        FROM pawn a
        left join goods g on a.goods_id = g.goods_id
        left join user u on u.user_id = a.present_person
        where
        a.is_delete=0
        <if test="keyword!=null and keyword!=''">
            and CONCAT(g.goods_name, a.pawn_name, u.user_name) like concat('%',#{keyword},'%')
        </if>
        order by a.CREATED_TIME desc
    </select>

    <select id="selectConditionList" resultType="java.util.HashMap">
        SELECT a.auctions_id as auctionsId,
        a.goods_id as goodsId,
        g.goods_name as goodName,
        a.pawn_name as pawnName,
        a.present_person as presentPerson,
        u.user_name as userName,
        a.present_price as presentPrice,
        a.starting_price as startingPrice,
        a.fixed_price as fixedPrice,
        DATE_FORMAT(a.start, '%Y-%m-%d %H:%i:%s') startTime,
        DATE_FORMAT(a.end, '%Y-%m-%d %H:%i:%s') endTime,
        DATE_FORMAT(a.CREATED_TIME, '%Y-%m-%d %H:%i:%s') createdTime
        FROM pawn a
        left join goods g on a.goods_id = g.goods_id
        left join user u on u.user_id = a.present_person
        where
        a.is_delete=0
        <if test="goodsId!=null and goodsId!=''">
            and a.goods_id=#{goodsId}
        </if>
        <if test="pawnName!=null and pawnName!=''">
            and a.pawn_name=#{pawnName}
        </if>
        order by a.CREATED_TIME desc
    </select>
    <!-- 查询未结束场次列表-->
    <!-- 返回值类型:  List<HashMap<String, Object>> selectUndoneList -->
    <!-- 参数: -->
    <!--  @param nowTime 当前时间   -->
    <select id="selectUndoneList" resultType="java.util.HashMap">
        SELECT a.auctions_id    as                              auctionsId,
               a.goods_id       as                              goodsId,
               g.goods_name     as                              goodName,
               a.pawn_name      as                              pawnName,
               a.fixed_price    as                              fixedPrice,
               a.present_person as                              presentPerson,
               a.present_price  as                              presentPrice,
               a.starting_price as                              startingPrice,
               DATE_FORMAT(a.start, '%Y-%m-%d %H:%i:%s')        startTime,
               DATE_FORMAT(a.end, '%Y-%m-%d %H:%i:%s')          endTime,
               DATE_FORMAT(a.CREATED_TIME, '%Y-%m-%d %H:%i:%s') createdTime,
               a.CREATED_BY as createdBy
        FROM pawn a
                 left join goods g on a.goods_id = g.goods_id
        where a.is_delete = 0
          and a.end &lt;= #{nowTime}
        order by a.CREATED_TIME desc
    </select>
</mapper>