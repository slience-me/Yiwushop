<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.slienceme.project_shop.mapper.ComplaintMapper">
    <resultMap id="BaseResultMap" type="xyz.slienceme.project_shop.dto.Complaint">
        <id column="complaint_id" jdbcType="INTEGER" property="complaintId"/>
        <result column="orders_id" jdbcType="INTEGER" property="ordersId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="complaint_status" jdbcType="INTEGER" property="complaintStatus"/>
        <result column="is_delete" jdbcType="INTEGER" property="isDelete"/>
        <result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="CREATED_BY" jdbcType="INTEGER" property="createdBy"/>
    </resultMap>
    <sql id="Base_Column_List">
        complaint_id
        , orders_id, user_id, remark, complaint_status, is_delete, CREATED_TIME,
    CREATED_BY
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from complaint
        where complaint_id = #{complaintId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from complaint
        where complaint_id = #{complaintId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="xyz.slienceme.project_shop.dto.Complaint">
        insert into complaint (complaint_id, orders_id, user_id,
                               remark, complaint_status, is_delete,
                               CREATED_TIME, CREATED_BY)
        values (#{complaintId,jdbcType=INTEGER}, #{ordersId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
                #{remark,jdbcType=VARCHAR}, #{complaintStatus,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER},
                #{createdTime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="xyz.slienceme.project_shop.dto.Complaint">
        insert into complaint
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="complaintId != null">
                complaint_id,
            </if>
            <if test="ordersId != null">
                orders_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="complaintStatus != null">
                complaint_status,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="createdTime != null">
                CREATED_TIME,
            </if>
            <if test="createdBy != null">
                CREATED_BY,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="complaintId != null">
                #{complaintId,jdbcType=INTEGER},
            </if>
            <if test="ordersId != null">
                #{ordersId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="complaintStatus != null">
                #{complaintStatus,jdbcType=INTEGER},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="createdTime != null">
                #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="xyz.slienceme.project_shop.dto.Complaint">
        update complaint
        <set>
            <if test="ordersId != null">
                orders_id = #{ordersId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="complaintStatus != null">
                complaint_status = #{complaintStatus,jdbcType=INTEGER},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="createdTime != null">
                CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                CREATED_BY = #{createdBy,jdbcType=INTEGER},
            </if>
        </set>
        where complaint_id = #{complaintId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="xyz.slienceme.project_shop.dto.Complaint">
        update complaint
        set orders_id        = #{ordersId,jdbcType=INTEGER},
            user_id          = #{userId,jdbcType=INTEGER},
            remark           = #{remark,jdbcType=VARCHAR},
            complaint_status = #{complaintStatus,jdbcType=INTEGER},
            is_delete        = #{isDelete,jdbcType=INTEGER},
            CREATED_TIME     = #{createdTime,jdbcType=TIMESTAMP},
            CREATED_BY       = #{createdBy,jdbcType=INTEGER}
        where complaint_id = #{complaintId,jdbcType=INTEGER}
    </update>
    <!-- 查询投诉表-->
    <!-- 返回值类型:  List<HashMap<String, Object>> selectList -->
    <!-- 参数: -->
    <!--  @param keyword 关键词   -->
    <select id="selectList" resultType="java.util.HashMap">
        SELECT c.complaint_id as complaintId,
        c.orders_id as ordersId,
        o.serial_num as serialNum,
        c.user_id as userId,
        u.user_name as userName,
        u.user_phone as userPhone,
        c.remark as remark,
        c.complaint_status as complaintStatus,
        DATE_FORMAT(c.CREATED_TIME, '%Y-%m-%d %H:%i:%s') createdTime
        FROM complaint c
        left join orders o on c.orders_id = o.orders_id
        left join user u on c.user_id = u.user_id
        where
        c.is_delete=0
        <if test="keyword!=null and keyword!=''">
            and CONCAT(o.serial_num, u.user_name, c.complaint_status ) like concat('%',#{keyword},'%')
        </if>
        order by c.CREATED_TIME desc
    </select>

    <select id="selectConditionList" resultType="java.util.HashMap">
        SELECT c.complaint_id as complaintId,
        c.orders_id as ordersId,
        o.serial_num as serialNum,
        c.user_id as userId,
        u.user_name as userName,
        c.remark as remark,
        c.complaint_status as complaintStatus,
        DATE_FORMAT(c.CREATED_TIME, '%Y-%m-%d %H:%i:%s') createdTime
        FROM complaint c
        left join orders o on c.orders_id = o.orders_id
        left join user u on c.user_id = u.user_id
        where
        c.is_delete=0
        <if test="ordersId!=null and ordersId!=''">
            and c.orders_id=#{ordersId}
        </if>
        <if test="userId!=null and userId!=''">
            and c.user_id=#{userId}
        </if>
        <if test="complaintStatus!=null and complaintStatus!=''">
            and c.complaint_status=#{complaintStatus}
        </if>
        order by c.CREATED_TIME desc
    </select>
</mapper>